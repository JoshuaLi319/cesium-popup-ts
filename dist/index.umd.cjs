(function(r,h){typeof exports=="object"&&typeof module<"u"?module.exports=h(require("cesium")):typeof define=="function"&&define.amd?define(["cesium"],h):(r=typeof globalThis<"u"?globalThis:r||self,r.index=h(r.cesium))})(this,function(r){"use strict";function h(t){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t){for(const i in t)if(i!=="default"){const s=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,s.get?s:{enumerable:!0,get:()=>t[i]})}}return e.default=t,Object.freeze(e)}const c=h(r);var a=(t=>(t[t.TOP=0]="TOP",t[t.CENTER=1]="CENTER",t[t.BOTTOM=2]="BOTTOM",t))(a||{}),u=(t=>(t[t.LEFT=0]="LEFT",t[t.CENTER=1]="CENTER",t[t.RIGHT=2]="RIGHT",t))(u||{});const d=class d{constructor(e){this.defaultOptions={isAdaptive:!1,offsetLeft:0,offsetTop:0,verticalOrigin:0,horizontalOrigin:0};const{dom:i,viewer:s,isAdaptive:f,offsetLeft:n,offsetTop:o,verticalOrigin:p,horizontalOrigin:v}={...this.defaultOptions,...e};if(!i||!s)throw new Error("dom and viewer are required configuration options.");this.dom=i,this.viewer=s,this.isAdaptive=f,this.offsetLeft=n,this.offsetTop=o,this.verticalOrigin=p,this.horizontalOrigin=v,this.setVisible(!0)}getCesiumContainerRect(){const e=this.viewer.container.getBoundingClientRect();return{width:e.width,height:e.height}}getWidth(){return this.dom.clientWidth}getHeight(){return this.dom.clientHeight}setPosition(e){const i=this.dom.style;i.left=`${e.left+this.offsetLeft}px`,i.top=`${e.top+this.offsetTop}px`}setVisible(e){const i=this.dom.style;i.display=e?"block":"none"}isVisible(){return this.dom.style.display==="block"}updatePosition(e){const i=this.getWidth(),s=this.getHeight(),f=this.getCesiumContainerRect();let n=e.left,o=e.top;switch(this.horizontalOrigin){case 2:n-=i;break;case 1:n-=i/2;break}switch(this.verticalOrigin){case 2:o-=s;break;case 1:o-=s/2;break}this.isAdaptive&&this.horizontalOrigin!=1&&(n<0?n=e.left:n+i>f.width&&(n=e.left-i)),this.verticalOrigin!=1&&(o<0?o=e.top:o+s>f.height&&(o=e.top-s)),this.setPosition({left:n,top:o})}bindTo(e){const i=()=>{let s=typeof e=="function"?e():e;if(!s)return;if(!new c.EllipsoidalOccluder(c.Ellipsoid.WGS84,this.viewer.camera.position).isPointVisible(s)){this.setVisible(!1);return}this.setVisible(!0);const n=c.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene,s);this.updatePosition({left:n.x,top:n.y})};return this.removePostRenderListener=()=>{this.viewer.scene.postRender.removeEventListener(i)},i(),this.removePostRenderListener(),this.viewer.scene.postRender.addEventListener(i),this.removePostRenderListener}removePostRenderListener(){}destroy(){this.removePostRenderListener()}};d.VerticalOrigin=a,d.HorizontalOrigin=u;let l=d;return l});
