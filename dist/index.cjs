"use strict";function g(i){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(i){for(const e in i)if(e!=="default"){const s=Object.getOwnPropertyDescriptor(i,e);Object.defineProperty(t,e,s.get?s:{enumerable:!0,get:()=>i[e]})}}return t.default=i,Object.freeze(t)}const h=g(require("cesium"));var a=(i=>(i[i.TOP=0]="TOP",i[i.CENTER=1]="CENTER",i[i.BOTTOM=2]="BOTTOM",i))(a||{}),d=(i=>(i[i.LEFT=0]="LEFT",i[i.CENTER=1]="CENTER",i[i.RIGHT=2]="RIGHT",i))(d||{});const c=class c{constructor(t){this.defaultOptions={isAdaptive:!1,offsetLeft:0,offsetTop:0,verticalOrigin:0,horizontalOrigin:0};const{dom:e,viewer:s,isAdaptive:n,offsetLeft:o,offsetTop:r,verticalOrigin:f,horizontalOrigin:p}={...this.defaultOptions,...t};if(!e||!s)throw new Error("dom and viewer are required configuration options.");this.dom=e,this.viewer=s,this.isAdaptive=n,this.offsetLeft=o,this.offsetTop=r,this.verticalOrigin=f,this.horizontalOrigin=p,this.setVisible(!0)}getCesiumContainerRect(){const t=this.viewer.container.getBoundingClientRect();return{width:t.width,height:t.height}}getWidth(){return this.dom.clientWidth}getHeight(){return this.dom.clientHeight}setPosition(t){const e=this.dom.style;e.left=`${t.left+this.offsetLeft}px`,e.top=`${t.top+this.offsetTop}px`}setVisible(t){this.dom.style.display=t?"block":"none"}isVisible(){return this.dom.style.display==="block"}updatePosition(t){const e=this.getWidth(),s=this.getHeight(),n=this.getCesiumContainerRect();let o=t.left,r=t.top;switch(this.horizontalOrigin){case 2:o-=e;break;case 1:o-=e/2}switch(this.verticalOrigin){case 2:r-=s;break;case 1:r-=s/2}this.isAdaptive&&this.horizontalOrigin!=1&&(o<0?o=t.left:o+e>n.width&&(o=t.left-e)),this.verticalOrigin!=1&&(r<0?r=t.top:r+s>n.height&&(r=t.top-s)),this.setPosition({left:o,top:r})}bindTo(t){const e=()=>{let s=typeof t=="function"?t():t;if(!s)return;if(this.viewer.scene.mode===h.SceneMode.SCENE3D&&!new h.EllipsoidalOccluder(h.Ellipsoid.WGS84,this.viewer.camera.position).isPointVisible(s))return void this.setVisible(!1);this.setVisible(!0);const n=h.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene,s);this.updatePosition({left:n.x,top:n.y})};return this.removePostRenderListener=()=>{this.viewer.scene.postRender.removeEventListener(e)},e(),this.removePostRenderListener(),this.viewer.scene.postRender.addEventListener(e),this.removePostRenderListener}removePostRenderListener(){}destroy(){this.removePostRenderListener()}};c.VerticalOrigin=a,c.HorizontalOrigin=d;let l=c;module.exports=l;
